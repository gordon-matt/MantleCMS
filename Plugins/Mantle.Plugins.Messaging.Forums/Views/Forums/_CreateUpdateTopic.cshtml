@using Mantle.Web.Configuration;
@using Mantle.Plugins.Messaging.Forums
@using Mantle.Web.Mvc

@model EditForumTopicModel

@inject ForumSettings Settings

@{
    foreach (var script in Settings.GetResources(ResourceType.Script, "Bootstrap-FileInput"))
    {
        <script asp-location="Foot" src="@script.Path"></script>
    }
    foreach (var style in Settings.GetResources(ResourceType.Stylesheet, "Bootstrap-FileInput"))
    {
        <link rel="stylesheet" href="@style.Path" />
    }
}

@await Component.ForumBreadcrumbsAsync(forumId: Model.ForumId, forumTopicId: Model.Id)
<div class="page forum-edit-page">
    <div class="page-title">
        @if (Model.IsEdit)
        {
            <h1>@T[LocalizableStrings.EditTopic]</h1>
        }
        else
        {
            <h1>@T[LocalizableStrings.NewTopic]</h1>
        }
    </div>
    <div class="page-body">
        @using (Html.BeginForm("TopicSave", "Forums"))
        {
            @Html.AntiForgeryToken()
            var validationSummary = Html.ValidationSummary(true).ToString();
            if (!string.IsNullOrEmpty(validationSummary))
            {
                <div class="message-error">@Html.Raw(validationSummary)</div>
            }
            @Html.HiddenFor(x => x.Id)
            @Html.HiddenFor(x => x.ForumId)
            @Html.HiddenFor(x => x.IsEdit)
            <div class="fieldset">
                <div class="form-fields">
                    <div class="form-group inputs">
                        <label class="label label-default">@T[LocalizableStrings.ForumName]</label>
                        <strong>@Model.ForumName</strong>
                    </div>
                    <div class="form-group inputs">
                        <label class="label label-default">@T[LocalizableStrings.TopicTitle]</label>
                        @Html.TextBoxFor(x => x.Subject, new { @class = "form-control forum-topic-title-text" })
                        @Html.ValidationMessageFor(x => x.Subject)
                    </div>
                    <div class="form-group inputs">
                        @if (Model.ForumEditor == EditorType.BBCodeEditor)
                        {
                            <script asp-location="None" asp-exclude-from-bundle="true" type="text/javascript" src="/Plugins/Messaging.Forums/wwwroot/js/BBEditor/ed.js"></script>
                            <script asp-location="None" asp-exclude-from-bundle="true" type="text/javascript">
                                edToolbar('Text', '/Plugins/Messaging.Forums/Scripts/', true);
                            </script>
                        }
                        <br />
                        @Html.TextAreaFor(x => x.Text, new { @class = "form-control forum-post-text", TextMode = "MultiLine", Rows = 7 })
                        @Html.ValidationMessageFor(x => x.Text)
                    </div>
                    @if (Model.IsUserAllowedToSetTopicPriority)
                    {
                        <div class="form-group inputs">
                            <label>@T[LocalizableStrings.Priority]</label>
                            @Html.DropDownList("TopicTypeId", new SelectList(Model.TopicPriorities, "Value", "Text", Model.TopicType))
                        </div>
                    }
                    @if (Model.IsUserAllowedToSubscribe)
                    {
                        <div class="form-group inputs">
                            @Html.EditorFor(x => x.Subscribed)
                            <label>@T[LocalizableStrings.NotifyWhenSomeonePostsInThisTopic]</label>
                        </div>
                    }
                </div>
            </div>
            <div class="buttons">
                <input type="submit" value="@T[MantleWebLocalizableStrings.General.Submit]" class="btn btn-primary submit-topic-button" />
                @Html.ActionLink(T[MantleWebLocalizableStrings.General.Cancel], "Forum", new { id = Model.ForumId, slug = Model.ForumSeName }, new { @class = "btn btn-default cancel-topic-button" })
            </div>
        }
    </div>
</div>

@await Html.PartialAsync("_UploadFile")