@model ForumTopicPageModel

@{
    ViewBag.Title = Model.Subject;
}
<div class="page forum-topic-page">
    @await Component.ForumBreadcrumbsAsync(forumTopicId: Model.Id)
    <partial name="_ForumHeader" />
    <hr class="clearfix" />
    <div class="topic-name">
        <h1>@Model.Subject</h1>
    </div>
    <div class="topic-actions upper mb-3">
        <div class="actions">
            @if (Model.IsUserAllowedToEditTopic)
            {
                <a href="@Url.Action("TopicEdit", new { id = Model.Id })" class="btn btn-outline-secondary edit-topic-button" title="@T[LocalizableStrings.EditTopic]">
                    <i class="fa fa-edit"></i>
                </a>
            }
            @if (Model.IsUserAllowedToDeleteTopic)
            {
                <a href="@Url.Action("TopicDelete", new { id = Model.Id })" class="btn btn-outline-danger delete-topic-button" title="@T[LocalizableStrings.DeleteTopic]" onclick="return confirm('@T[MantleWebLocalizableStrings.General.AreYouSure]');">
                    <i class="fa fa-remove"></i>
                </a>
            }
            @if (Model.IsUserAllowedToMoveTopic)
            {
                <a href="@Url.Action("TopicMove", new { id = Model.Id })" class="btn btn-outline-warning move-topic-button" title="@T[LocalizableStrings.MoveTopic]">
                    <i class="fa fa-arrow-right"></i>
                </a>
            }

            <a href="@Url.Action("PostCreate", new { id = Model.Id })" class="btn btn-outline-primary reply-topic-button" title="@T[LocalizableStrings.Reply]">
                <i class="fa fa-mail-reply"></i>
            </a>

            @if (Model.IsUserAllowedToSubscribe)
            {
                <a class="btn btn-success watch-topic-button" href="#" id="watch-topic-top" title="@Model.WatchTopicText">
                    <i class="fa fa-binoculars"></i>
                </a>

                <script asp-location="Foot" type="text/javascript">
                    $(function () {
                        $('#watch-topic-top').click(function () {
                            $.ajax({
                                cache: false,
                                type: 'POST',
                                url: '@Url.Action("TopicWatch", new { id = Model.Id })',
                                dataType: 'json',
                                success: function (data) {
                                    $('#watch-topic-top').text(data.Text);
                                    $('#watch-topic-bottom').text(data.Text);
                                },
                                error: function (xhr, ajaxOptions, thrownError) {
                                    alert('Failed to watch');
                                }
                            });
                        });
                    });
                </script>
            }
        </div>
        @{
            var pager = Html.Pager(new PagerModel
            {
                PageSize = Model.PostsPageSize,
                TotalRecords = Model.PostsTotalRecords,
                PageIndex = Model.PostsPageIndex,
                ShowTotalSummary = false,
                RouteActionName = "Topic",
                //UseRouteLinks = true,
                RouteValues = new RouteValues { id = Model.Id, slug = Model.SeName }
            }).ToString();
        }
        @if (!string.IsNullOrEmpty(pager))
        {
            <div class="pager upper">
                @Html.Raw(pager)
            </div>
        }
    </div>

    <div class="table-wrapper">
        <table class="table table-bordered">
            @foreach (var post in Model.ForumPostModels)
            {
                <partial name="_ForumPost" model="post" />
            }
        </table>
    </div>

    @*<div class="topic-posts">
        @foreach (var post in Model.ForumPostModels)
        {
            <partial name="_ForumPost" model="post" />
        }
    </div>*@

    <div class="topic-actions lower">
        <div class="actions">
            <a href="@Url.Action("PostCreate", new { id = Model.Id })" class="btn btn-outline-primary reply-topic-button" title="@T[LocalizableStrings.Reply]">
                <i class="fa fa-mail-reply"></i>
            </a>

            @if (Model.IsUserAllowedToSubscribe)
            {
                <a class="btn btn-outline-success" href="#" id="watch-topic-bottom" title="@Model.WatchTopicText">
                    <i class="fa fa-binoculars"></i>
                </a>

                <script asp-location="Foot" type="text/javascript">
                    $(function () {
                        $('#watch-topic-bottom').click(function () {
                            var postData = {};
                            addAntiForgeryToken(postData);

                            $.ajax({
                                cache: false,
                                type: 'POST',
                                url: '@Url.Action("TopicWatch", new { id = Model.Id })',
                                data: postData,
                                dataType: 'json',
                                success: function (data) {
                                    $('#watch-topic-top').text(data.Text);
                                    $('#watch-topic-bottom').text(data.Text);
                                },
                                error: function (xhr, ajaxOptions, thrownError) {
                                    alert('Failed to watch');
                                }
                            });
                        });
                    });
                </script>
            }
        </div>
        @if (!string.IsNullOrEmpty(pager))
        {
            <div class="pager lower">
                @Html.Raw(pager)
            </div>
        }
    </div>
</div>
