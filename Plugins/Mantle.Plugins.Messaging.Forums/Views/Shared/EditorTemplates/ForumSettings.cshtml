@using Mantle.Plugins.Messaging.Forums
@using Mantle.Plugins.Messaging.Forums.Data.Domain

@model ForumSettings

<div id="settings-content">
    <div class="form-group">
        <mantle-input asp-for="ForumsEnabled" asp-label="@T[LocalizableStrings.Settings.ForumsEnabled]" />
        <mantle-input asp-for="RelativeDateTimeFormattingEnabled" asp-label="@T[LocalizableStrings.Settings.RelativeDateTimeFormattingEnabled]" />
        <mantle-input asp-for="AllowUsersToEditPosts" asp-label="@T[LocalizableStrings.Settings.AllowUsersToEditPosts]" />
        <mantle-input asp-for="AllowUsersToManageSubscriptions" asp-label="@T[LocalizableStrings.Settings.AllowUsersToManageSubscriptions]" />
        <mantle-input asp-for="AllowUsersToDeletePosts" asp-label="@T[LocalizableStrings.Settings.AllowUsersToDeletePosts]" />
    </div>
    <mantle-input asp-for="TopicSubjectMaxLength" asp-label="@T[LocalizableStrings.Settings.TopicSubjectMaxLength]" asp-validation-msg="true" type="number" />
    <mantle-input asp-for="StrippedTopicMaxLength" asp-label="@T[LocalizableStrings.Settings.StrippedTopicMaxLength]" asp-validation-msg="true" type="number" />
    <mantle-input asp-for="PostMaxLength" asp-label="@T[LocalizableStrings.Settings.PostMaxLength]" asp-validation-msg="true" type="number" />
    <mantle-input asp-for="TopicsPageSize" asp-label="@T[LocalizableStrings.Settings.TopicsPageSize]" asp-validation-msg="true" type="number" />
    <mantle-input asp-for="PostsPageSize" asp-label="@T[LocalizableStrings.Settings.PostsPageSize]" asp-validation-msg="true" type="number" />
    <mantle-input asp-for="SearchResultsPageSize" asp-label="@T[LocalizableStrings.Settings.SearchResultsPageSize]" asp-validation-msg="true" type="number" />
    <mantle-input asp-for="ActiveDiscussionsPageSize" asp-label="@T[LocalizableStrings.Settings.ActiveDiscussionsPageSize]" asp-validation-msg="true" type="number" />
    <mantle-input asp-for="LatestUserPostsPageSize" asp-label="@T[LocalizableStrings.Settings.LatestUserPostsPageSize]" asp-validation-msg="true" type="number" />

    <div class="form-group">
        <mantle-input asp-for="ShowUsersPostCount" asp-label="@T[LocalizableStrings.Settings.ShowUsersPostCount]" />
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ForumEditor, new { @class = "control-label" })
        @Html.DropDownListFor(m => m.ForumEditor, Html.GetEnumSelectList<EditorType>(), new { @class = "form-control", data_bind = "value: forumEditor" })
        @Html.ValidationMessageFor(m => m.ForumEditor)
    </div>
    <div class="form-group">
        <mantle-input asp-for="SignaturesEnabled" asp-label="@T[LocalizableStrings.Settings.SignaturesEnabled]" />
        <mantle-input asp-for="AllowPrivateMessages" asp-label="@T[LocalizableStrings.Settings.AllowPrivateMessages]" />
        <mantle-input asp-for="ShowAlertForPM" asp-label="@T[LocalizableStrings.Settings.ShowAlertForPM]" />
    </div>
    <mantle-input asp-for="PrivateMessagesPageSize" asp-label="@T[LocalizableStrings.Settings.PrivateMessagesPageSize]" asp-validation-msg="true" type="number" />
    <mantle-input asp-for="ForumSubscriptionsPageSize" asp-label="@T[LocalizableStrings.Settings.ForumSubscriptionsPageSize]" asp-validation-msg="true" type="number" />
    <div class="form-group">
        <mantle-input asp-for="NotifyAboutPrivateMessages" asp-label="@T[LocalizableStrings.Settings.NotifyAboutPrivateMessages]" />
    </div>
    <mantle-input asp-for="PMSubjectMaxLength" asp-label="@T[LocalizableStrings.Settings.PMSubjectMaxLength]" asp-validation-msg="true" type="number" />
    <mantle-input asp-for="PMTextMaxLength" asp-label="@T[LocalizableStrings.Settings.PMTextMaxLength]" asp-validation-msg="true" type="number" />
    <mantle-input asp-for="HomePageActiveDiscussionsTopicCount" asp-label="@T[LocalizableStrings.Settings.HomePageActiveDiscussionsTopicCount]" asp-validation-msg="true" type="number" />
    <mantle-input asp-for="ActiveDiscussionsFeedCount" asp-label="@T[LocalizableStrings.Settings.ActiveDiscussionsFeedCount]" asp-validation-msg="true" type="number" />
    <div class="form-group">
        <mantle-input asp-for="ActiveDiscussionsFeedEnabled" asp-label="@T[LocalizableStrings.Settings.ActiveDiscussionsFeedEnabled]" />
        <mantle-input asp-for="ForumFeedsEnabled" asp-label="@T[LocalizableStrings.Settings.ForumFeedsEnabled]" />
    </div>
    <mantle-input asp-for="ForumFeedCount" asp-label="@T[LocalizableStrings.Settings.ForumFeedCount]" asp-validation-msg="true" type="number" />
    <mantle-input asp-for="ForumSearchTermMinimumLength" asp-label="@T[LocalizableStrings.Settings.ForumSearchTermMinimumLength]" asp-validation-msg="true" type="number" />
    <mantle-input asp-for="PageTitle" asp-label="@T[LocalizableStrings.Settings.PageTitle]" asp-validation-msg="true" />
    <div class="form-group">
        <mantle-input asp-for="ShowOnMenus" asp-label="@T[LocalizableStrings.Settings.ShowOnMenus]" />
    </div>
    <mantle-input asp-for="MenuPosition" asp-label="@T[LocalizableStrings.Settings.MenuPosition]" asp-validation-msg="true" type="number" />
    <mantle-input asp-for="LayoutPathOverride" asp-label="@T[LocalizableStrings.Settings.LayoutPathOverride]" asp-validation-msg="true" />

    @await Html.Mantle().EmbeddedPartialAsync(EmbeddedPartialType.ResourceSettings)
</div>

<script asp-location="None" asp-exclude-from-bundle="true" type="text/javascript">
    function updateModel(viewModel, data) {
        viewModel.forumsEnabled = ko.observable(true);
        viewModel.relativeDateTimeFormattingEnabled = ko.observable(true);
        viewModel.allowUsersToEditPosts = ko.observable(true);
        viewModel.allowUsersToManageSubscriptions = ko.observable(true);
        viewModel.allowUsersToDeletePosts = ko.observable(true);
        viewModel.topicSubjectMaxLength = ko.observable(255);
        viewModel.strippedTopicMaxLength = ko.observable(255);
        viewModel.postMaxLength = ko.observable(2048);
        viewModel.topicsPageSize = ko.observable(10);
        viewModel.postsPageSize = ko.observable(10);
        viewModel.searchResultsPageSize = ko.observable(10);
        viewModel.activeDiscussionsPageSize = ko.observable(10);
        viewModel.latestUserPostsPageSize = ko.observable(10);
        viewModel.showUsersPostCount = ko.observable(true);
        viewModel.forumEditor = ko.observable(20);
        viewModel.signaturesEnabled = ko.observable(true);
        viewModel.allowPrivateMessages = ko.observable(false);
        viewModel.showAlertForPM = ko.observable(true);
        viewModel.privateMessagesPageSize = ko.observable(10);
        viewModel.forumSubscriptionsPageSize = ko.observable(10);
        viewModel.notifyAboutPrivateMessages = ko.observable(true);
        viewModel.pMSubjectMaxLength = ko.observable(128);
        viewModel.pMTextMaxLength = ko.observable(1024);
        viewModel.homePageActiveDiscussionsTopicCount = ko.observable(10);
        viewModel.forumFeedsEnabled = ko.observable(true);
        viewModel.forumFeedCount = ko.observable(10);
        viewModel.activeDiscussionsFeedEnabled = ko.observable(true);
        viewModel.activeDiscussionsFeedCount = ko.observable(10);
        viewModel.forumSearchTermMinimumLength = ko.observable(2);
        viewModel.pageTitle = ko.observable(null);
        viewModel.showOnMenus = ko.observable(true);
        viewModel.menuPosition = ko.observable(0);
        viewModel.layoutPathOverride = ko.observable('');

        viewModel.resources = ko.observableArray([]);

        if (data) {
            if (data.ForumsEnabled && typeof data.ForumsEnabled === 'boolean') { viewModel.forumsEnabled(data.ForumsEnabled); }
            if (data.RelativeDateTimeFormattingEnabled && typeof data.RelativeDateTimeFormattingEnabled === 'boolean') { viewModel.relativeDateTimeFormattingEnabled(data.RelativeDateTimeFormattingEnabled); }
            if (data.AllowUsersToEditPosts && typeof data.AllowUsersToEditPosts === 'boolean') { viewModel.allowUsersToEditPosts(data.AllowUsersToEditPosts); }
            if (data.AllowUsersToManageSubscriptions && typeof data.AllowUsersToManageSubscriptions === 'boolean') { viewModel.allowUsersToManageSubscriptions(data.AllowUsersToManageSubscriptions); }
            if (data.AllowUsersToDeletePosts && typeof data.AllowUsersToDeletePosts === 'boolean') { viewModel.allowUsersToDeletePosts(data.AllowUsersToDeletePosts); }
            if (data.TopicSubjectMaxLength) { viewModel.topicSubjectMaxLength(data.TopicSubjectMaxLength); }
            if (data.StrippedTopicMaxLength) { viewModel.strippedTopicMaxLength(data.StrippedTopicMaxLength); }
            if (data.PostMaxLength) { viewModel.postMaxLength(data.PostMaxLength); }
            if (data.TopicsPageSize) { viewModel.topicsPageSize(data.TopicsPageSize); }
            if (data.PostsPageSize) { viewModel.postsPageSize(data.PostsPageSize); }
            if (data.SearchResultsPageSize) { viewModel.searchResultsPageSize(data.SearchResultsPageSize); }
            if (data.ActiveDiscussionsPageSize) { viewModel.activeDiscussionsPageSize(data.ActiveDiscussionsPageSize); }
            if (data.LatestUserPostsPageSize) { viewModel.latestUserPostsPageSize(data.LatestUserPostsPageSize); }
            if (data.ShowUsersPostCount && typeof data.ShowUsersPostCount === 'boolean') { viewModel.showUsersPostCount(data.ShowUsersPostCount); }
            if (data.ForumEditor) { viewModel.forumEditor(data.ForumEditor); }
            if (data.SignaturesEnabled && typeof data.SignaturesEnabled === 'boolean') { viewModel.signaturesEnabled(data.SignaturesEnabled); }
            if (data.AllowPrivateMessages && typeof data.AllowPrivateMessages === 'boolean') { viewModel.allowPrivateMessages(data.AllowPrivateMessages); }
            if (data.ShowAlertForPM && typeof data.ShowAlertForPM === 'boolean') { viewModel.showAlertForPM(data.ShowAlertForPM); }
            if (data.PrivateMessagesPageSize) { viewModel.privateMessagesPageSize(data.PrivateMessagesPageSize); }
            if (data.ForumSubscriptionsPageSize) { viewModel.forumSubscriptionsPageSize(data.ForumSubscriptionsPageSize); }
            if (data.NotifyAboutPrivateMessages && typeof data.NotifyAboutPrivateMessages === 'boolean') { viewModel.notifyAboutPrivateMessages(data.NotifyAboutPrivateMessages); }
            if (data.PMSubjectMaxLength) { viewModel.pMSubjectMaxLength(data.PMSubjectMaxLength); }
            if (data.PMTextMaxLength) { viewModel.pMTextMaxLength(data.PMTextMaxLength); }
            if (data.HomePageActiveDiscussionsTopicCount) { viewModel.homePageActiveDiscussionsTopicCount(data.HomePageActiveDiscussionsTopicCount); }
            if (data.ActiveDiscussionsFeedCount) { viewModel.activeDiscussionsFeedCount(data.ActiveDiscussionsFeedCount); }
            if (data.ActiveDiscussionsFeedEnabled && typeof data.ActiveDiscussionsFeedEnabled === 'boolean') { viewModel.activeDiscussionsFeedEnabled(data.ActiveDiscussionsFeedEnabled); }
            if (data.ForumFeedsEnabled && typeof data.ForumFeedsEnabled === 'boolean') { viewModel.forumFeedsEnabled(data.ForumFeedsEnabled); }
            if (data.ForumFeedCount) { viewModel.forumFeedCount(data.ForumFeedCount); }
            if (data.ForumSearchTermMinimumLength) { viewModel.forumSearchTermMinimumLength(data.ForumSearchTermMinimumLength); }
            if (data.PageTitle) { viewModel.pageTitle(data.PageTitle); }
            if (data.ShowOnMenus && typeof data.ShowOnMenus === 'boolean') { viewModel.showOnMenus(data.ShowOnMenus); }
            if (data.MenuPosition) { viewModel.menuPosition(data.MenuPosition); }
            if (data.LayoutPathOverride) { viewModel.layoutPathOverride(data.LayoutPathOverride); }

            if (data.Resources) {
                viewModel.setResources(data.Resources);
            }
        }
    };

    function cleanUp(viewModel) {
        delete viewModel.forumsEnabled;
        delete viewModel.relativeDateTimeFormattingEnabled;
        delete viewModel.allowUsersToEditPosts;
        delete viewModel.allowUsersToManageSubscriptions;
        delete viewModel.allowUsersToDeletePosts;
        delete viewModel.topicSubjectMaxLength;
        delete viewModel.strippedTopicMaxLength;
        delete viewModel.postMaxLength;
        delete viewModel.topicsPageSize;
        delete viewModel.postsPageSize;
        delete viewModel.searchResultsPageSize;
        delete viewModel.activeDiscussionsPageSize;
        delete viewModel.latestUserPostsPageSize;
        delete viewModel.showUsersPostCount;
        delete viewModel.forumEditor;
        delete viewModel.signaturesEnabled;
        delete viewModel.allowPrivateMessages;
        delete viewModel.showAlertForPM;
        delete viewModel.privateMessagesPageSize;
        delete viewModel.forumSubscriptionsPageSize;
        delete viewModel.notifyAboutPrivateMessages;
        delete viewModel.pMSubjectMaxLength;
        delete viewModel.pMTextMaxLength;
        delete viewModel.homePageActiveDiscussionsTopicCount;
        delete viewModel.activeDiscussionsFeedCount;
        delete viewModel.activeDiscussionsFeedEnabled;
        delete viewModel.forumFeedsEnabled;
        delete viewModel.forumFeedCount;
        delete viewModel.forumSearchTermMinimumLength;
        delete viewModel.pageTitle;
        delete viewModel.showOnMenus;
        delete viewModel.menuPosition;
        delete viewModel.layoutPathOverride;
        delete viewModel.resources;
    }

    function onBeforeSave(viewModel) {
        const data = {
            ForumsEnabled: viewModel.forumsEnabled(),
            RelativeDateTimeFormattingEnabled: viewModel.relativeDateTimeFormattingEnabled(),
            AllowUsersToEditPosts: viewModel.allowUsersToEditPosts(),
            AllowUsersToManageSubscriptions: viewModel.allowUsersToManageSubscriptions(),
            AllowUsersToDeletePosts: viewModel.allowUsersToDeletePosts(),
            TopicSubjectMaxLength: viewModel.topicSubjectMaxLength(),
            StrippedTopicMaxLength: viewModel.strippedTopicMaxLength(),
            PostMaxLength: viewModel.postMaxLength(),
            TopicsPageSize: viewModel.topicsPageSize(),
            PostsPageSize: viewModel.postsPageSize(),
            SearchResultsPageSize: viewModel.searchResultsPageSize(),
            ActiveDiscussionsPageSize: viewModel.activeDiscussionsPageSize(),
            LatestUserPostsPageSize: viewModel.latestUserPostsPageSize(),
            ShowUsersPostCount: viewModel.showUsersPostCount(),
            ForumEditor: viewModel.forumEditor(),
            SignaturesEnabled: viewModel.signaturesEnabled(),
            AllowPrivateMessages: viewModel.allowPrivateMessages(),
            ShowAlertForPM: viewModel.showAlertForPM(),
            PrivateMessagesPageSize: viewModel.privateMessagesPageSize(),
            ForumSubscriptionsPageSize: viewModel.forumSubscriptionsPageSize(),
            NotifyAboutPrivateMessages: viewModel.notifyAboutPrivateMessages(),
            PMSubjectMaxLength: viewModel.pMSubjectMaxLength(),
            PMTextMaxLength: viewModel.pMTextMaxLength(),
            HomePageActiveDiscussionsTopicCount: viewModel.homePageActiveDiscussionsTopicCount(),
            ActiveDiscussionsFeedCount: viewModel.activeDiscussionsFeedCount(),
            ActiveDiscussionsFeedEnabled: viewModel.activeDiscussionsFeedEnabled(),
            ForumFeedsEnabled: viewModel.forumFeedsEnabled(),
            ForumFeedCount: viewModel.forumFeedCount(),
            ForumSearchTermMinimumLength: viewModel.forumSearchTermMinimumLength(),
            PageTitle: viewModel.pageTitle(),
            ShowOnMenus: viewModel.showOnMenus(),
            MenuPosition: viewModel.menuPosition(),
            LayoutPathOverride: viewModel.layoutPathOverride(),
            Resources: viewModel.resources()
        };

        viewModel.value(ko.mapping.toJSON(data));
    };
</script>