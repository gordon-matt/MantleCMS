@using Extenso.AspNetCore.Mvc.ExtensoUI
@using Mantle.Plugins.Widgets.FullCalendar
@using Mantle.Plugins.Widgets.FullCalendar.ContentBlocks
@using Mantle.Web.Mvc

@inject Microsoft.Extensions.Localization.IStringLocalizer T

@model FullCalendarBlock

<div id="block-content">
    @using (var tabs = Html.ExtensoUI().Begin(new Tabs()))
    {
        tabs.Tab(T[LocalizableStrings.ContentBlocks.FullCalendarBlock.EditorTabs.General], "General");
        tabs.Tab(T[LocalizableStrings.ContentBlocks.FullCalendarBlock.EditorTabs.AgendaOptions], "AgendaOptions");
        tabs.Tab(T[LocalizableStrings.ContentBlocks.FullCalendarBlock.EditorTabs.Selection], "Selection");
        tabs.Tab(T[LocalizableStrings.ContentBlocks.FullCalendarBlock.EditorTabs.EventRendering], "EventRendering");

        using (var panel = tabs.BeginPanel())
        {
            <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.CalendarId, new { @class = "control-label col-xs-12 col-sm-4 col-md-3 col-lg-3" })
                    <div class="col-xs-12 col-sm-8 col-md-9 col-lg-9">
                        @Html.FullCalendar().CalendarDropDownListFor(m => m.CalendarId, new { @class = "form-control", data_bind = "value: blockModel.calendarId" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.FirstDay, new { @class = "control-label col-xs-12 col-sm-4 col-md-3 col-lg-3" })
                    <div class="col-xs-12 col-sm-8 col-md-9 col-lg-9">
                        @Html.DropDownListFor(m => m.FirstDay, Html.GetEnumSelectList<DayOfWeek>(), new { @class = "form-control", data_bind = "value: blockModel.firstDay" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.AspectRatio, new { @class = "control-label col-xs-12 col-sm-4 col-md-3 col-lg-3" })
                    <div class="col-xs-12 col-sm-8 col-md-9 col-lg-9">
                        @Html.TextBoxFor(m => m.AspectRatio, new { @class = "form-control", data_bind = "value: blockModel.aspectRatio" })
                    </div>
                </div>
            </div>
            <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                <div class="form-group">
                    <label class="control-label col-xs-12 col-sm-4 col-md-3 col-lg-3"></label>
                    <div class="col-xs-12 col-sm-8 col-md-9 col-lg-9">
                        <div class="checkbox">
                            <label>
                                @Html.CheckBox("Theme", new { data_bind = "checked: blockModel.theme" }) @T[LocalizableStrings.ContentBlocks.FullCalendarBlock.Theme]
                            </label>
                        </div>
                        <div class="checkbox">
                            <label>
                                @Html.CheckBox("Weekends", new { data_bind = "checked: blockModel.weekends" }) @T[LocalizableStrings.ContentBlocks.FullCalendarBlock.Weekends]
                            </label>
                        </div>
                        <div class="checkbox">
                            <label>
                                @Html.CheckBox("FixedWeekCount", new { data_bind = "checked: blockModel.fixedWeekCount" }) @T[LocalizableStrings.ContentBlocks.FullCalendarBlock.FixedWeekCount]
                            </label>
                        </div>
                        <div class="checkbox">
                            <label>
                                @Html.CheckBox("WeekNumbers", new { data_bind = "checked: blockModel.weekNumbers" }) @T[LocalizableStrings.ContentBlocks.FullCalendarBlock.WeekNumbers]
                            </label>
                        </div>
                        <div class="checkbox">
                            <label>
                                @Html.CheckBox("HandleWindowResize", new { data_bind = "checked: blockModel.handleWindowResize" }) @T[LocalizableStrings.ContentBlocks.FullCalendarBlock.HandleWindowResize]
                            </label>
                        </div>
                    </div>
                </div>
            </div>
        }
        using (var panel = tabs.BeginPanel())
        {
            <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                <div class="form-group">
                    <label class="control-label col-xs-12 col-sm-4 col-md-3 col-lg-3"></label>
                    <div class="col-xs-12 col-sm-8 col-md-9 col-lg-9">
                        <div class="checkbox">
                            <label>
                                @Html.CheckBox("SlotEventOverlap", new { data_bind = "checked: blockModel.slotEventOverlap" }) @T[LocalizableStrings.ContentBlocks.FullCalendarBlock.SlotEventOverlap]
                            </label>
                        </div>
                        <div class="checkbox">
                            <label>
                                @Html.CheckBox("AllDaySlot", new { data_bind = "checked: blockModel.allDaySlot" }) @T[LocalizableStrings.ContentBlocks.FullCalendarBlock.AllDaySlot]
                            </label>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.AllDayText, new { @class = "control-label col-xs-12 col-sm-4 col-md-3 col-lg-3" })
                    <div class="col-xs-12 col-sm-8 col-md-9 col-lg-9">
                        @Html.TextBoxFor(m => m.AllDayText, new { @class = "form-control", data_bind = "value: blockModel.allDayText" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.SlotDuration, new { @class = "control-label col-xs-12 col-sm-4 col-md-3 col-lg-3" })
                    <div class="col-xs-12 col-sm-8 col-md-9 col-lg-9">
                        @Html.TextBoxFor(m => m.SlotDuration, new { @class = "form-control", data_bind = "value: blockModel.slotDuration" })
                    </div>
                </div>
            </div>
            <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.ScrollTime, new { @class = "control-label col-xs-12 col-sm-4 col-md-3 col-lg-3" })
                    <div class="col-xs-12 col-sm-8 col-md-9 col-lg-9">
                        @Html.TextBoxFor(m => m.ScrollTime, new { @class = "form-control", data_bind = "value: blockModel.scrollTime" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.MinTime, new { @class = "control-label col-xs-12 col-sm-4 col-md-3 col-lg-3" })
                    <div class="col-xs-12 col-sm-8 col-md-9 col-lg-9">
                        @Html.TextBoxFor(m => m.MinTime, new { @class = "form-control", data_bind = "value: blockModel.minTime" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.MaxTime, new { @class = "control-label col-xs-12 col-sm-4 col-md-3 col-lg-3" })
                    <div class="col-xs-12 col-sm-8 col-md-9 col-lg-9">
                        @Html.TextBoxFor(m => m.MaxTime, new { @class = "form-control", data_bind = "value: blockModel.maxTime" })
                    </div>
                </div>
            </div>
        }
        using (var panel = tabs.BeginPanel())
        {
            <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                <div class="form-group">
                    <label class="control-label col-xs-12 col-sm-4 col-md-3 col-lg-3"></label>
                    <div class="col-xs-12 col-sm-8 col-md-9 col-lg-9">
                        <div class="checkbox">
                            <label>
                                @Html.CheckBox("Selectable", new { data_bind = "checked: blockModel.selectable" }) @T[LocalizableStrings.ContentBlocks.FullCalendarBlock.Selectable]
                            </label>
                        </div>
                        <div class="checkbox">
                            <label>
                                @Html.CheckBox("UnselectAuto", new { data_bind = "checked: blockModel.unselectAuto" }) @T[LocalizableStrings.ContentBlocks.FullCalendarBlock.UnselectAuto]
                            </label>
                        </div>
                        <div class="checkbox">
                            <label>
                                @Html.CheckBox("SelectOverlap", new { data_bind = "checked: blockModel.selectOverlap" }) @T[LocalizableStrings.ContentBlocks.FullCalendarBlock.SelectOverlap]
                            </label>
                        </div>
                    </div>
                </div>
            </div>
        }
        using (var panel = tabs.BeginPanel())
        {
            <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.EventColor, new { @class = "control-label col-xs-12 col-sm-4 col-md-3 col-lg-3" })
                    <div class="col-xs-12 col-sm-8 col-md-9 col-lg-9">
                        @Html.TextBoxFor(m => m.EventColor, new { @class = "form-control", data_bind = "value: blockModel.eventColor" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.EventBackgroundColor, new { @class = "control-label col-xs-12 col-sm-4 col-md-3 col-lg-3" })
                    <div class="col-xs-12 col-sm-8 col-md-9 col-lg-9">
                        @Html.TextBoxFor(m => m.EventBackgroundColor, new { @class = "form-control", data_bind = "value: blockModel.eventBackgroundColor" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.EventBorderColor, new { @class = "control-label col-xs-12 col-sm-4 col-md-3 col-lg-3" })
                    <div class="col-xs-12 col-sm-8 col-md-9 col-lg-9">
                        @Html.TextBoxFor(m => m.EventBorderColor, new { @class = "form-control", data_bind = "value: blockModel.eventBorderColor" })
                    </div>
                </div>
            </div>
            <div class="col-xs-12 col-sm-6 col-md-6 col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.EventTextColor, new { @class = "control-label col-xs-12 col-sm-4 col-md-3 col-lg-3" })
                    <div class="col-xs-12 col-sm-8 col-md-9 col-lg-9">
                        @Html.TextBoxFor(m => m.EventTextColor, new { @class = "form-control", data_bind = "value: blockModel.eventTextColor" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.NextDayThreshold, new { @class = "control-label col-xs-12 col-sm-4 col-md-3 col-lg-3" })
                    <div class="col-xs-12 col-sm-8 col-md-9 col-lg-9">
                        @Html.TextBoxFor(m => m.NextDayThreshold, new { @class = "form-control", data_bind = "value: blockModel.nextDayThreshold" })
                    </div>
                </div>
            </div>
        }
    }
</div>

<script type="text/javascript">
    @Model.RenderKOScript()
</script>