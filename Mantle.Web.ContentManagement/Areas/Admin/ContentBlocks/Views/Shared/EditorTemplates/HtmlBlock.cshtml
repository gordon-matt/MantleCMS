@using Mantle.Web.Mvc
@model Mantle.Web.ContentManagement.Areas.Admin.ContentBlocks.HtmlBlock

<div id="block-content">
    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <div class="form-group">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                @Html.LabelFor(m => m.BodyContent, new { @class = "control-label" })
                <tiny-mce theme="modern" content.bind="blockModel.bodyContent" options.bind="blockModel.tinyMCEConfig"></tiny-mce>
                @Html.HelpTextFor(m => m.BodyContent)
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                @Html.LabelFor(m => m.Script, new { @class = "control-label" })
                <textarea name="Script" class="form-control" rows="7" value.bind="blockModel.script"></textarea>
                @Html.HelpTextFor(m => m.Script)
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    //import { MantleTinyMCEOptions } from '/aurelia-app/embedded/Mantle.Web.CommonResources.Scripts.tinymce.mantle-tinymce';

    var contentBlockModel = (function () {
        var f = {};
        f.updateModel = function (blockModel) {
            blockModel.bodyContent = '';
            blockModel.script = '';

            var data = JSON.parse(blockModel.blockValues);

            if (data && data.BodyContent) {
                blockModel.bodyContent = data.BodyContent;
            }
            if (data && data.Script) {
                blockModel.script = data.Script;
            }

            let options = new MantleTinyMCEOptions();
            blockModel.tinyMCEConfig = options.defaultConfig;
        };
        f.cleanUp = function (blockModel) {
            delete blockModel.bodyContent;
            delete blockModel.script;
            delete blockModel.tinyMCEConfig;
        };
        f.onBeforeSave = function (blockModel) {
            var data = {
                BodyContent: blockModel.bodyContent,
                Script: blockModel.script
            };

            blockModel.blockValues = JSON.stringify(data);
        };
        return f;
    })();
</script>