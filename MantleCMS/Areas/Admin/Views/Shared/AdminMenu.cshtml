@using Microsoft.AspNetCore.Html
@using MenuItem = Mantle.Web.Navigation.MenuItem
@inject Mantle.Web.Navigation.INavigationManager navigationManager

<style type="text/css">
    .dropdown-menu li {
        position: relative;
    }

    .dropdown-menu .dropdown-submenu {
        display: none;
        position: absolute;
        left: 100%;
        top: -7px;
    }

    .dropdown-menu .dropdown-submenu-left {
        right: 100%;
        left: auto;
    }

    .dropdown-menu > li:hover > .dropdown-submenu {
        display: block;
    }
</style>

@{
    var menuItems = navigationManager.BuildMenu("Admin");

    Func<MenuItem, int, IHtmlContent> DisplayMenuItems = null;
    DisplayMenuItems = (menuItem, level) => new Func<MenuItem, IHtmlContent>(
        @<text>
        <li class="nav-item @(menuItem.Items.Any() ? "dropdown" : string.Empty)">
            @{
                int iconCount = menuItem.Icons.Count();
            }
            @if (menuItem.Items.Any())
            {
                <a class="nav-link dropdown-toggle @(menuItem.Selected ? "active" : string.Empty)" href="@menuItem.Href" role="button" data-bs-toggle="dropdown">
                    @if (iconCount == 1)
                    {
                        <i class="@menuItem.Icons.ElementAt(0)"></i>@:&nbsp;
                    }
                    else if (iconCount > 1)
                    {
                        // We only support 2 icons max:
                        string firstIcon = menuItem.Icons.ElementAt(0);
                        string secondIcon = menuItem.Icons.ElementAt(1);
                        <span class="fa-stack">
                            <i class="@firstIcon fa-stack-1x"></i>
                            <i class="@secondIcon fa-stack-1x" style="top:-7px;left:7px;"></i>
                        </span>
                    }
                    <span>@menuItem.Text</span>
                </a>
                <ul class="dropdown-menu@(level > 0 ? " dropdown-submenu" : string.Empty)">
                    @foreach (var childMenuItem in menuItem.Items)
                    {
                        @DisplayMenuItems(childMenuItem, level + 1)
                    }
                </ul>
            }
            else
            {
                if (!string.IsNullOrEmpty(menuItem.Href))
                {
                    string cssClass = level == 0 ? "nav-link" : "dropdown-item";

                    <a class="@cssClass" href="@menuItem.Href">
                        @if (iconCount == 1)
                        {
                            <i class="@menuItem.Icons.ElementAt(0)"></i>@:&nbsp;
                        }
                        else if (iconCount > 1)
                        {
                            // We only support 2 icons max:
                            string firstIcon = menuItem.Icons.ElementAt(0);
                            string secondIcon = menuItem.Icons.ElementAt(1);
                            <span class="fa-stack">
                                <i class="@firstIcon fa-stack-1x"></i>
                                <i class="@secondIcon fa-stack-1x" style="top:-7px;left:7px;"></i>
                            </span>
                        }
                        <span>@menuItem.Text</span>
                    </a>
                }
            }
        </li>
        </text>)(null);
}

<ul class="navbar-nav me-auto mb-2 mb-lg-0">
    @foreach (var menuItem in menuItems)
    {
        @DisplayMenuItems(menuItem, 0)
    }
</ul>
